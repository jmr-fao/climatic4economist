{"title":"Climate Indicators","markdown":{"yaml":{"title":"Climate Indicators","author":"JMR","format":"html","editor":"source","editor_options":{"chunk_output_type":"console"}},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nCreate frequentist weather extreme indicators to be used in the microeconomics analysis. The frequentist approach counts the number of weather extreme events that occurred in a reference period. The extreme events are measured based on their rarity of occurrence. This rarity is measured based on the percentiles of the long run weather distribution. In this tutorial we use the 90th, 95th and 99th percentiles as threshold of rarity. The interpretation of these thresholds is the probability of occurrence: above the 90th percentile the probability is 10 percent, above 95th percentile is 5 percent, and above the 99th percentile is 1%.\n\nThe weather extreme events are calculated based on the locations of the LSMS survey. We use five surveys from Ethiopia, Malawi, Niger, Nigeria, and Tanzania. \n\nThe reference period to calculate the weather extreme is 12 months before the date of interview of each household.\n\nGiven the amount of households is five surveys, the calculation can be challenging from a memory point of view. The approach is to split the five surveys and calculate the weather extreme indicator separately. Moreover, we will reduce the amount of data required by selecting just the observations that are relevant based on the 12 months before the date of interview.\n\n\n## Steps\n\n1. Read the data and georeference the surveys\n2. Crop the global weather data to the survey location\n3. Extract the weather observations based on the survey locations\n4. Transform the weather unit of measure (Kelvin into Celsius and rainfall flux into mm/day)\n5. Calculate the long run percentile of the weather distributions\n6. Find the extreme weather events\n7. Merge the weather extreme events with the survey\n8. Summarize the weather extreme events into indicators based on the date of interview\n9. Write the result\n\n## Code\n### Set Up\n```{r paths}\n#| label: paths\n\npath_to_survey <- file.path(\"..\",\n                            \"data\", \"survey\", \"LSMS_labor_survey\",\n                            \"labour_forYR_coordinates_new.dta\")\n\npath_to_weather <- file.path(\"..\",\n                             \"data\", \"weather\", \"WFDE5\")\npath_to_pre <- file.path(path_to_weather, \"pre\")\npath_to_tmp <- file.path(path_to_weather, \"tmax\")\n\n\npath_to_extreme  <- file.path(\"..\",\n                              \"data\", \"result\")\n\npath_to_tmp_extreme <- file.path(path_to_extreme, \"lbr_srv_tmp_extr.dta\")\npath_to_pre_extreme <- file.path(path_to_extreme, \"lbr_srv_pre_extr.dta\")\n\n```\n\n```{r package}\n#| label: package\n\nlibrary(climatic4economist)\n```\n\n### Read\n```{r read_weather}\n#| label: read_weather\n\npre <- list.files(path_to_pre, full.names = TRUE) |>\n    terra::rast()\nnames(pre) <- terra::time(pre)\n\ntmp <- list.files(path_to_tmp, full.names = TRUE) |>\n    terra::rast()\nnames(tmp) <- terra::time(tmp)\n```\n\n```{r read_survey}\n#| label: read_survey\n\nsurveys <- haven::read_dta(path_to_survey) |>\n  dplyr::filter(survey != \"Uganda16\") |> # 100849\n  dplyr::filter(!is.na(lon_mod) & !is.na(lat_mod)) |>\n  dplyr::select(-dplyr::starts_with(\"UGA\"),\n                -dplyr::starts_with(\"AdmDiv\"),\n                -year) |>\n  dplyr::distinct(survey, hhid, .keep_all = TRUE) |>\n  dplyr::group_by(survey) |>\n  dplyr::group_split() |>\n  lapply(prepare_coord, \n         lon_var = lon_mod,\n         lat_var = lat_mod) |>\n  setNames(c(\"Ethiopia19\", \"Malawi17\", \"Niger14\", \"Nigeria19\", \"Tanzania13\"))\n\nsurvey_geo <- lapply(surveys, \n                     georef_coord,\n                     geom = c(\"lon_mod\", \"lat_mod\"),\n                     crs = \"EPSG:4326\") \n```\n\n### Crop\n```{r crop}\n#| label: crop\n\npre_cntry <- sapply(survey_geo,\n                    terra::crop,\n                    x = pre,\n                    snap = \"out\",\n                    simplify = FALSE)\n\ntmp_cntry <- sapply(survey_geo,\n                    terra::crop,\n                    x = tmp,\n                    snap = \"out\",\n                    simplify = FALSE)\n```\n\n\n### Transformation\n```{r transformation}\n#| label: transformation\n\n# From flux rate to millimeters per day\npre_cntry_mm <- purrr::map(pre_cntry, ~ .x*86400)\n\n# From Kelvin to Celsius\ntmp_cntry_c <- purrr::map(tmp_cntry, ~ .x - 273.15)\n```\n\n\n### Extract\n```{r extract}\n#| label: extract\n\npre_coord <- pre_cntry_mm |>\n    purrr::map(terra::focal,\n             w = 3, \n             fun = \"mean\", \n             na.policy = \"only\") |>\n  purrr::map2(survey_geo,\n              extract_by_coord)\n\ntmp_coord <- tmp_cntry_c |>\n  purrr::map(terra::focal,\n             w = 3, \n             fun = \"mean\", \n             na.policy = \"only\") |>\n  purrr::map2(survey_geo,\n              extract_by_coord)\n```\n\n\n### Percentiles\n```{r percentiles}\n#| label: percentiles\n\npre_perc <- purrr::map2(pre_coord,\n                        names(pre_coord),\n                        calc_pct_day,\n                        p = c(0.90, 0.95, 0.99),\n                        l_thresh = 0.1,\n                        yearly = TRUE)\n\ntmp_perc <- purrr::map2(tmp_coord,\n                        names(tmp_coord),\n                        calc_pct_day,\n                        p = c(0.90, 0.95, 0.99),\n                        yearly = TRUE)\n```\n\n\n### Find extreme days\n```{r find_rel_extr_day}\n#| label: find_rel_extr_day\n\npre_coord_mm_10yrs <- purrr::pmap(\n  list(pre_coord,\n       list(\"2009-01-01\", \"2007-01-01\", \"2004-01-01\", \"2009-01-01\", \"2003-01-01\"),\n       list(\"2019-12-31\", \"2018-01-01\", \"2016-01-01\", \"2019-12-31\", \"2014-01-01\")),\n  select_by_dates)\ntmp_coord_c_10yrs <- purrr::pmap(\n  list(tmp_coord,\n       list(\"2009-01-01\", \"2007-01-01\", \"2004-01-01\", \"2009-01-01\", \"2003-01-01\"),\n       list(\"2019-12-31\", \"2018-01-01\", \"2016-01-01\", \"2019-12-31\", \"2014-01-01\")),\n  select_by_dates)\n\npre_extr <- purrr::pmap(list(pre_coord_mm_10yrs,\n                             iteracation = names(pre_coord_mm_10yrs),\n                             u_thresh = pre_perc),\n                        find_extr_rel_day,\n                        unit = \"mm\") |>\n  purrr::map(\\(x) dplyr::select(x, -dplyr::starts_with(\"mm\")))\n\ntmp_extr <- purrr::pmap(list(tmp_coord_c_10yrs, \n                             u_thresh = tmp_perc,\n                             iteracation = names(tmp_coord_c_10yrs) \n                             ),\n                        find_extr_rel_day,\n                        unit = \"c\") |>\n  purrr::map(\\(x) dplyr::select(x, -dplyr::starts_with(\"c\")))\n```\n\n### Merge with Survey\n```{r merge_with_survey}\n#| label: merge_with_survey\n\npre_extr_survey <- purrr::pmap(list(surveys,\n                                    iteracation = names(surveys),\n                                    pre_extr),\n                               merge_with_survey)\n\npre_extr_survey <- purrr::map(pre_extr_survey,\n                              filter_by_interview,\n                              interview = date_interview,\n                              interval = \"1 year\")\n\ntmp_extr_survey <- purrr::pmap(list(surveys,\n                                    iteracation = names(surveys),\n                                    tmp_extr),\n                               merge_with_survey)\n\ntmp_extr_survey <- purrr::map(tmp_extr_survey, \n                              filter_by_interview,\n                              interview = date_interview,\n                              interval = \"1 year\")\n```\n\n\n### Calculate climate indicators\n```{r weather_extreme_ind}\n#| label: weather_extreme_ind\n\npre_ind <- purrr::map2(pre_extr_survey,\n                       names(pre_extr_survey),\n                       extr_day_index,\n                       id = hhid,\n                       interview = date_interview,\n                       interval = \"1 year\",\n                       n_lags = 0)\n\ntmp_ind <- purrr::map2(tmp_extr_survey,\n                       names(tmp_extr_survey),\n                       extr_day_index,\n                       id = hhid,\n                       interview = date_interview,\n                       interval = \"1 year\",\n                       n_lags = 0)\n\n\n```\n\n\n### Write\n```{r write}\n#| label: write\n\npre_ind |>\n  dplyr::bind_rows(.id = \"survey\") |>\n  haven::write_dta(path_to_pre_extreme)\n\ntmp_ind |>\n  dplyr::bind_rows(.id = \"survey\") |>\n  haven::write_dta(path_to_tmp_extreme)\n```\n\n\n## Appendix\n### Data\n#### Weather\nW5E5 dataset was compiled to support the bias adjustment of climate  input data for the impact assessments carried out in phase 3b of the Inter-Sectoral Impact Model Intercomparison Project (ISIMIP3b)  The WFDE5 dataset has been generated using the WATCH Forcing Data (WFD) methodology applied to surface meteorological variables from the ERA5  reanalysis.\n\nIt is possible to find additional information [here](https://data.isimip.org/10.48364/ISIMIP.342217) and the related article [here](https://essd.copernicus.org/articles/12/2097/2020/). \nThe data can be freely download from [here](https://data.isimip.org/search/page/2/climate_forcing/w5e5v2.0/simulation_round/ISIMIP3a/product/SecondaryInputData/).\n\nDaily Maximum Near Surface Air Temperature\n1\nTo convert Kelvin degree in to Celsius degree use use this relation: 1C째 = 1K째 - 273.15\n\n\n| Parameter           | Value               |\n|:--------------------|:-------------------:|\n| spatial resolution  | 0.5째 x 0.5째 lon lat |\n| temporal resolution | daily               |\n| time frame          | Jan 1979 - Dec 2019 |\n| unit of measure     | Kelvin              |\n\nDaily Rainfall flux from The W5E5\n\nRainfall flux is the rate of rain that falls to the Earth's surface. Values are derived from ERA5 total precipitation and snowfall and are  bias corrected primarily using precipitation data from CRU and GPCC.\n\nTo convert rainfall flux into mm/day use use this relation: 1 kg/m2/s = 86400 mm/day.\n\n| Parameter           | Value               |\n|:--------------------|:-------------------:|\n| spatial resolution  | 0.5째 x 0.5째 lon lat |\n| temporal resolution | daily               |\n| time frame          | Jan 1979 - Dec 2019 |\n| unit of measure     | kg/m2/s             |\n\n#### Survey\nThe Living Standards Measurement Study - Integrated Surveys on Agriculture (LSMS-ISA) is a unique system of longitudinal surveys designed to improve the understanding of household and individual welfare, livelihoods and smallholder agriculture in Africa. The LSMS team works with national statistics offices to design and implement household surveys with a strong focus on agriculture.\n\nAdditional information can be find [here](https://www.worldbank.org/en/programs/lsms). The data can be download from [here](https://microdata.worldbank.org/index.php/home).\n\nThe following survey are used in this tutorial.\n\n| Survey    | Year |\n|:----------|-----:|\n| Ethiopia  | 2019 |\n| Malawi    | 2017 |\n| Niger     | 2014 |\n| Nigeria   | 2019 |\n| Tanzania  | 2013 |\n\n","srcMarkdownNoYaml":"\n\n\n## Introduction\nCreate frequentist weather extreme indicators to be used in the microeconomics analysis. The frequentist approach counts the number of weather extreme events that occurred in a reference period. The extreme events are measured based on their rarity of occurrence. This rarity is measured based on the percentiles of the long run weather distribution. In this tutorial we use the 90th, 95th and 99th percentiles as threshold of rarity. The interpretation of these thresholds is the probability of occurrence: above the 90th percentile the probability is 10 percent, above 95th percentile is 5 percent, and above the 99th percentile is 1%.\n\nThe weather extreme events are calculated based on the locations of the LSMS survey. We use five surveys from Ethiopia, Malawi, Niger, Nigeria, and Tanzania. \n\nThe reference period to calculate the weather extreme is 12 months before the date of interview of each household.\n\nGiven the amount of households is five surveys, the calculation can be challenging from a memory point of view. The approach is to split the five surveys and calculate the weather extreme indicator separately. Moreover, we will reduce the amount of data required by selecting just the observations that are relevant based on the 12 months before the date of interview.\n\n\n## Steps\n\n1. Read the data and georeference the surveys\n2. Crop the global weather data to the survey location\n3. Extract the weather observations based on the survey locations\n4. Transform the weather unit of measure (Kelvin into Celsius and rainfall flux into mm/day)\n5. Calculate the long run percentile of the weather distributions\n6. Find the extreme weather events\n7. Merge the weather extreme events with the survey\n8. Summarize the weather extreme events into indicators based on the date of interview\n9. Write the result\n\n## Code\n### Set Up\n```{r paths}\n#| label: paths\n\npath_to_survey <- file.path(\"..\",\n                            \"data\", \"survey\", \"LSMS_labor_survey\",\n                            \"labour_forYR_coordinates_new.dta\")\n\npath_to_weather <- file.path(\"..\",\n                             \"data\", \"weather\", \"WFDE5\")\npath_to_pre <- file.path(path_to_weather, \"pre\")\npath_to_tmp <- file.path(path_to_weather, \"tmax\")\n\n\npath_to_extreme  <- file.path(\"..\",\n                              \"data\", \"result\")\n\npath_to_tmp_extreme <- file.path(path_to_extreme, \"lbr_srv_tmp_extr.dta\")\npath_to_pre_extreme <- file.path(path_to_extreme, \"lbr_srv_pre_extr.dta\")\n\n```\n\n```{r package}\n#| label: package\n\nlibrary(climatic4economist)\n```\n\n### Read\n```{r read_weather}\n#| label: read_weather\n\npre <- list.files(path_to_pre, full.names = TRUE) |>\n    terra::rast()\nnames(pre) <- terra::time(pre)\n\ntmp <- list.files(path_to_tmp, full.names = TRUE) |>\n    terra::rast()\nnames(tmp) <- terra::time(tmp)\n```\n\n```{r read_survey}\n#| label: read_survey\n\nsurveys <- haven::read_dta(path_to_survey) |>\n  dplyr::filter(survey != \"Uganda16\") |> # 100849\n  dplyr::filter(!is.na(lon_mod) & !is.na(lat_mod)) |>\n  dplyr::select(-dplyr::starts_with(\"UGA\"),\n                -dplyr::starts_with(\"AdmDiv\"),\n                -year) |>\n  dplyr::distinct(survey, hhid, .keep_all = TRUE) |>\n  dplyr::group_by(survey) |>\n  dplyr::group_split() |>\n  lapply(prepare_coord, \n         lon_var = lon_mod,\n         lat_var = lat_mod) |>\n  setNames(c(\"Ethiopia19\", \"Malawi17\", \"Niger14\", \"Nigeria19\", \"Tanzania13\"))\n\nsurvey_geo <- lapply(surveys, \n                     georef_coord,\n                     geom = c(\"lon_mod\", \"lat_mod\"),\n                     crs = \"EPSG:4326\") \n```\n\n### Crop\n```{r crop}\n#| label: crop\n\npre_cntry <- sapply(survey_geo,\n                    terra::crop,\n                    x = pre,\n                    snap = \"out\",\n                    simplify = FALSE)\n\ntmp_cntry <- sapply(survey_geo,\n                    terra::crop,\n                    x = tmp,\n                    snap = \"out\",\n                    simplify = FALSE)\n```\n\n\n### Transformation\n```{r transformation}\n#| label: transformation\n\n# From flux rate to millimeters per day\npre_cntry_mm <- purrr::map(pre_cntry, ~ .x*86400)\n\n# From Kelvin to Celsius\ntmp_cntry_c <- purrr::map(tmp_cntry, ~ .x - 273.15)\n```\n\n\n### Extract\n```{r extract}\n#| label: extract\n\npre_coord <- pre_cntry_mm |>\n    purrr::map(terra::focal,\n             w = 3, \n             fun = \"mean\", \n             na.policy = \"only\") |>\n  purrr::map2(survey_geo,\n              extract_by_coord)\n\ntmp_coord <- tmp_cntry_c |>\n  purrr::map(terra::focal,\n             w = 3, \n             fun = \"mean\", \n             na.policy = \"only\") |>\n  purrr::map2(survey_geo,\n              extract_by_coord)\n```\n\n\n### Percentiles\n```{r percentiles}\n#| label: percentiles\n\npre_perc <- purrr::map2(pre_coord,\n                        names(pre_coord),\n                        calc_pct_day,\n                        p = c(0.90, 0.95, 0.99),\n                        l_thresh = 0.1,\n                        yearly = TRUE)\n\ntmp_perc <- purrr::map2(tmp_coord,\n                        names(tmp_coord),\n                        calc_pct_day,\n                        p = c(0.90, 0.95, 0.99),\n                        yearly = TRUE)\n```\n\n\n### Find extreme days\n```{r find_rel_extr_day}\n#| label: find_rel_extr_day\n\npre_coord_mm_10yrs <- purrr::pmap(\n  list(pre_coord,\n       list(\"2009-01-01\", \"2007-01-01\", \"2004-01-01\", \"2009-01-01\", \"2003-01-01\"),\n       list(\"2019-12-31\", \"2018-01-01\", \"2016-01-01\", \"2019-12-31\", \"2014-01-01\")),\n  select_by_dates)\ntmp_coord_c_10yrs <- purrr::pmap(\n  list(tmp_coord,\n       list(\"2009-01-01\", \"2007-01-01\", \"2004-01-01\", \"2009-01-01\", \"2003-01-01\"),\n       list(\"2019-12-31\", \"2018-01-01\", \"2016-01-01\", \"2019-12-31\", \"2014-01-01\")),\n  select_by_dates)\n\npre_extr <- purrr::pmap(list(pre_coord_mm_10yrs,\n                             iteracation = names(pre_coord_mm_10yrs),\n                             u_thresh = pre_perc),\n                        find_extr_rel_day,\n                        unit = \"mm\") |>\n  purrr::map(\\(x) dplyr::select(x, -dplyr::starts_with(\"mm\")))\n\ntmp_extr <- purrr::pmap(list(tmp_coord_c_10yrs, \n                             u_thresh = tmp_perc,\n                             iteracation = names(tmp_coord_c_10yrs) \n                             ),\n                        find_extr_rel_day,\n                        unit = \"c\") |>\n  purrr::map(\\(x) dplyr::select(x, -dplyr::starts_with(\"c\")))\n```\n\n### Merge with Survey\n```{r merge_with_survey}\n#| label: merge_with_survey\n\npre_extr_survey <- purrr::pmap(list(surveys,\n                                    iteracation = names(surveys),\n                                    pre_extr),\n                               merge_with_survey)\n\npre_extr_survey <- purrr::map(pre_extr_survey,\n                              filter_by_interview,\n                              interview = date_interview,\n                              interval = \"1 year\")\n\ntmp_extr_survey <- purrr::pmap(list(surveys,\n                                    iteracation = names(surveys),\n                                    tmp_extr),\n                               merge_with_survey)\n\ntmp_extr_survey <- purrr::map(tmp_extr_survey, \n                              filter_by_interview,\n                              interview = date_interview,\n                              interval = \"1 year\")\n```\n\n\n### Calculate climate indicators\n```{r weather_extreme_ind}\n#| label: weather_extreme_ind\n\npre_ind <- purrr::map2(pre_extr_survey,\n                       names(pre_extr_survey),\n                       extr_day_index,\n                       id = hhid,\n                       interview = date_interview,\n                       interval = \"1 year\",\n                       n_lags = 0)\n\ntmp_ind <- purrr::map2(tmp_extr_survey,\n                       names(tmp_extr_survey),\n                       extr_day_index,\n                       id = hhid,\n                       interview = date_interview,\n                       interval = \"1 year\",\n                       n_lags = 0)\n\n\n```\n\n\n### Write\n```{r write}\n#| label: write\n\npre_ind |>\n  dplyr::bind_rows(.id = \"survey\") |>\n  haven::write_dta(path_to_pre_extreme)\n\ntmp_ind |>\n  dplyr::bind_rows(.id = \"survey\") |>\n  haven::write_dta(path_to_tmp_extreme)\n```\n\n\n## Appendix\n### Data\n#### Weather\nW5E5 dataset was compiled to support the bias adjustment of climate  input data for the impact assessments carried out in phase 3b of the Inter-Sectoral Impact Model Intercomparison Project (ISIMIP3b)  The WFDE5 dataset has been generated using the WATCH Forcing Data (WFD) methodology applied to surface meteorological variables from the ERA5  reanalysis.\n\nIt is possible to find additional information [here](https://data.isimip.org/10.48364/ISIMIP.342217) and the related article [here](https://essd.copernicus.org/articles/12/2097/2020/). \nThe data can be freely download from [here](https://data.isimip.org/search/page/2/climate_forcing/w5e5v2.0/simulation_round/ISIMIP3a/product/SecondaryInputData/).\n\nDaily Maximum Near Surface Air Temperature\n1\nTo convert Kelvin degree in to Celsius degree use use this relation: 1C째 = 1K째 - 273.15\n\n\n| Parameter           | Value               |\n|:--------------------|:-------------------:|\n| spatial resolution  | 0.5째 x 0.5째 lon lat |\n| temporal resolution | daily               |\n| time frame          | Jan 1979 - Dec 2019 |\n| unit of measure     | Kelvin              |\n\nDaily Rainfall flux from The W5E5\n\nRainfall flux is the rate of rain that falls to the Earth's surface. Values are derived from ERA5 total precipitation and snowfall and are  bias corrected primarily using precipitation data from CRU and GPCC.\n\nTo convert rainfall flux into mm/day use use this relation: 1 kg/m2/s = 86400 mm/day.\n\n| Parameter           | Value               |\n|:--------------------|:-------------------:|\n| spatial resolution  | 0.5째 x 0.5째 lon lat |\n| temporal resolution | daily               |\n| time frame          | Jan 1979 - Dec 2019 |\n| unit of measure     | kg/m2/s             |\n\n#### Survey\nThe Living Standards Measurement Study - Integrated Surveys on Agriculture (LSMS-ISA) is a unique system of longitudinal surveys designed to improve the understanding of household and individual welfare, livelihoods and smallholder agriculture in Africa. The LSMS team works with national statistics offices to design and implement household surveys with a strong focus on agriculture.\n\nAdditional information can be find [here](https://www.worldbank.org/en/programs/lsms). The data can be download from [here](https://microdata.worldbank.org/index.php/home).\n\nThe following survey are used in this tutorial.\n\n| Survey    | Year |\n|:----------|-----:|\n| Ethiopia  | 2019 |\n| Malawi    | 2017 |\n| Niger     | 2014 |\n| Nigeria   | 2019 |\n| Tanzania  | 2013 |\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"self-contained":true,"output-file":"lbr_srvy_climatic_indicator.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","author":"JMR","toc-expand":3,"logo":"../images/Climat4Economist_Symbol.png","editor":"source","editor_options":{"chunk_output_type":"console"},"vignette":"%\\VignetteIndexEntry{Vignette's Title} %\\VignetteEncoding{UTF-8} %\\VignetteEngine{quarto::html}\n","toc-location":"right-body","title":"Climate Indicators"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html","docx"]}