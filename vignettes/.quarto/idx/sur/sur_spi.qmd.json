{"title":"Compute SPI","markdown":{"yaml":{"title":"Compute SPI","author":"JMR","format":{"html":{"self-contained":true,"code-tools":true,"toc":true,"toc-expand":1,"toc-depth":2,"toc-location":"right-body"}},"editor":"source","editor_options":{"chunk_output_type":"console"},"vignette":"%\\VignetteIndexEntry{Vignette's Title} %\\VignetteEncoding{UTF-8} %\\VignetteEngine{quarto::html}\n"},"headingText":"Is this guide for me?","containsRefs":false,"markdown":"\n\n\nThis guide provides a step-by-step approach to compute the Standardized Precipitation Index (SPI) based on survey locations. The target audience includes economists who may have experience with statistical software (e.g. STATA) but are less familiar with R.\n\n## Overview of Steps\n\nIn this guide, we will go through the following steps:\n\n1.  Load the data\n2.  Prepare the data\n4.  Compute the SPI\n5.  Merge the SPI values with the survey\n6.  Save the results.\n\n## What do I need before starting?\n\nThe following R packages are necessary: `tidyverse`, `haven`, `SPEI`, `furrr`, `clock` and script `functions.R`, which contain the wrapped specific functions. To install the above package you can use `install.packages(\"name_of_package\")`, don't forget the `\"`.\n\nIf you are not familiar with R check the [appendix] for understanding some coding style used in this tutorial.\n\n# Code\n## Set Up\n\nIn the setup, we create the paths to the various data sources and load the necessary functions for extraction.\n\n```{r set_up}\n#| label: set_up\n\n# paths\npath_to_pre_survey <- file.path(#\"..\",\n                                \"data_processed\", \"pre_month_survey.dta\")\n\n# load wrapper functions\nsource(file.path(\"script_qmd\",\n                 \"functions.R\"))\n\n```\n\n## Load the data\n\nWe expect to already have the precipitation time series associated with the household of the survey. This data is stored as `dta` files, so we use the `haven::read_dta()` function to read it.\n\n```{r read_surveys}\n#| label: read_surveys\n\nsurvey <- haven::read_dta(path_to_pre_survey)\n\nsurvey\n```\n\n## Prepare the data\n```{r unique_values}\nn_hh <- nrow(survey)\nn_hh\n\nn_locations <- unique(survey$ID) |> \n  length()\nn_locations\n\nn_cells <- survey |>\n    dplyr::distinct(x_cell, y_cell) |>\n    nrow()\nn_cells\n```\n\nIn the survey there are `r n_hh` household, but some of them share the same location. Indeed the number of unique location is `r n_locations`. Further, some of these location have the same weather observations. The actual unique weather observations is `r n_cells`.\n\nComputing the SPI can be computationally intensive, especially if we need to do it for each households. However, we now that there actually only `r n_cells` distinct weather time series, so we compute the SPI only for these ones. We prepare the data with the `prepare_coord()` function.\n\n```{r prep_coord}\n#| label: prep_coord\n\ncoord <- prepare_coord(survey,\n                       lat_var = y_cell, \n                       lon_var = x_cell)\n```\n\n## Compute the SPI\nWe now compute the SPI with the function `compute_spi()`. This function requires the precipitation time series for each location and the time scale at which the SPI is computed.\n\nTo compute the SPI, it is recommended to use at least 30 years of observation to ensure a good estimation of the parameters. More years can strength the estimation but the results can be affected by climate change: if there have been a change in the climate parameters, old observations might be not indicative of the current situation affecting the estimation. There are no clear rule on this, so we leave add the possibility to select the time range of observation with the function `select_by_dates()`. The function requires both or just one between the starting date, `from`, and the end date `to`. If both are provide the the function select between the two dates, if only `from` is provided the function selects all date after, and if only `to` is provided the function selects all date before.\n\nLooking at the result, we see first is the `ID` column, that we will use to merge back with the survey. The other columns contain the SPI observations over time specific to each coordinate.\n\n```{r compute_spi}\n#| label: compute_spi\n#| warning: false\n\n# coord  <- select_by_dates(coord, from = \"1991-01-01\", to = \"2023-01-01\") \n\nspi3 <- compute_spi(coord, time_scale = 3)\nspi3\n```\n\n## Merge with survey\n\nNow, we combine the extracted weather data with the survey data using `ID` as the key matching variable.\n\nIf we want to select just a subsets of observations we can use the `select_by_dates()` function. If we want to select based on the date of interview of the survey, we can use `select_by_interview()`. This last function requires the variable that contains the dates of interview and the interval to select based on the dates. The interval must be express in number of months or in number years. The `wide` argument specifies how the output should be reported, in wide with each time observation as separate columns, or long, with all observation in one column.\n\n>Note that current version of the `select_by_interview()` functions drops the observations with missing date of interview.\n\n```{r merge_spi}\n#| label: merge_spi\nspi3_survey <- merge_with_survey(coord, spi3)\n\n# select_by_interview(spi3_survey,\n#                     interview = end_date_n,\n#                     interval = \"1 year\",\n#                     wide = TRUE)\n\nspi3_survey\n```\n\nWe are back at `r nrow(spi3_survey)`, which matches the original survey.\n\n## Save\n\nThe final step of the code is to save the result. In this case, we save it as a `dta` file using the `haven::write_dta()` function.\n\n```{r write_data}\n#| label: write_data\n\nhaven::write_dta(spi3_survey,\n                 file.path(\"..\", \"data_processed\", \"spi3_survey.dta\"))\n```\n\n# Take home messages\n\n1.  Load! `haven::read_dta()` for the dta files,\n\n2.  Prepare the data! Use the wrapper functions `prepare_coord()`.\n\n3.  Compute! Use the wrapper function `compute_spi()`.\n\n4.  Merge! Use the wrapper function `merge_with_survey()`.\n\n5.  Save! If in a dta file use `haven::write_dta()`.\n\n# Appendix\n## New to R? Read this first!\n### The pipe command\n\nThe pipe command `|>`. It lets you pass the result of one expression as the first argument to the next, creating a fluid chain of functions.\n\n### The package namespaces\n\nThe package namespaces `package_name::function_name()`. As the name suggests, namespaces provide \"spaces\" for \"names\". They provide a context for looking up the value of an object associated with a name. When we write `terra::vect()` we are asking R to look for the function `vect()` in the `terra` package.\n\nIt's a fairly advanced topic, and by-and-large, not that important! When you first start using namespaces, it'll seem like a lot of work for little gain. However, having a high quality namespace helps encapsulate your package and makes it self-contained. This ensures that other packages won't interfere with your code, that your code won't interfere with other packages, and that your package works regardless of the environment in which it's run.\n\nYou can avoid using every time the name space by just loading the necessary packages at the beginning of the code (in the set up section for example). This is the most known and common approach. To do so just add `library(name_of_package)`, for example `library(terra)`. Then we can just call the function without the name space, like this `vect()`.\n\n### The assign operator\n\nThe assign operator `<-`. This is a peculiarity of R and it is used to assign values to variables. Note that the operators `<-` and `=` can be used, almost interchangeably.\n\n## Want to know about the data?\n### Precipitation\nMonthly precipitation from Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS)[^1] is a 35+ year quasi-global rainfall data set. Spanning 50°S-50°N (and all longitudes) and ranging from 1981 to near-present, CHIRPS incorporates in-house climatology, CHPclim, 0.05° resolution satellite imagery, and in-situ station data to create gridded rainfall time series for trend analysis and seasonal drought monitoring.\n\nData can be downloaded from [here](https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/netcdf/) while extra information are available [here](https://www.chc.ucsb.edu/).\n\n[^1]: Funk, C.C., Peterson, P.J., Landsfeld, M.F., Pedreros, D.H., Verdin, J.P., Rowland, J.D., Romero, B.E., Husak, G.J., Michaelsen, J.C., and Verdin, A.P., 2014, A quasi-global precipitation time series for drought monitoring: U.S. Geological Survey Data Series 832, 4 p. http://pubs.usgs.gov/ds/832/\n\n| feature             | value                 |\n|:--------------------|:----------------------|\n| spatial resolution  | 0.05 x 0.05 (\\~ 5 km) |\n| temporal resolution | monthly               |\n| temporal frame      | 1981 - near present   |\n| unit of measure     | mm/month              |\n\n### Survey\nSuriname Survey of Living Conditions. The 2022 Suriname Survey of Living Conditions is a joint survey made by The Inter-American Development Bank (IDB) and the World Bank. The 2022 Suriname Survey of Living Conditions - administered to a nationally representative sample, which included 7,713 individuals from 2,540 households - was developed to support poverty analysis as well as policy planning and is a helpful tool for policy makers to facilitate fact-based decision making. The survey’s design and execution were financed by the IDB, while the World Bank and IDB are joining forces to analyze data and produce initial findings. The Suriname Survey of Living Conditions (SSLC) 2016/17 is an effort of the Inter-American Development Bank (IDB) with the support of the EnergieBedrijvan Suriname’s (state-owned electrical company of Suriname) and the Central Bank of Suriname. It visited about 2,000 households from October 2016 through September 2017 and collected data on the most important dimensions of welfare, which will support evidence-based policy making in areas such as education, health, housing, employment and poverty alleviation. The survey also gathered information on the consumption patterns, income and expenditures of the Surinamese households, intended to update the Consumption Price Index basket and inform the System of National Accounts.\n\nFor extra info look [here](https://openknowledge.worldbank.org/entities/publication/2d0e6975-2f85-4d12-83fa-4f75c617cf89) and [here](https://webapps.ilo.org/surveyLib/index.php/catalog/7499).\n\n","srcMarkdownNoYaml":"\n\n## Is this guide for me?\n\nThis guide provides a step-by-step approach to compute the Standardized Precipitation Index (SPI) based on survey locations. The target audience includes economists who may have experience with statistical software (e.g. STATA) but are less familiar with R.\n\n## Overview of Steps\n\nIn this guide, we will go through the following steps:\n\n1.  Load the data\n2.  Prepare the data\n4.  Compute the SPI\n5.  Merge the SPI values with the survey\n6.  Save the results.\n\n## What do I need before starting?\n\nThe following R packages are necessary: `tidyverse`, `haven`, `SPEI`, `furrr`, `clock` and script `functions.R`, which contain the wrapped specific functions. To install the above package you can use `install.packages(\"name_of_package\")`, don't forget the `\"`.\n\nIf you are not familiar with R check the [appendix] for understanding some coding style used in this tutorial.\n\n# Code\n## Set Up\n\nIn the setup, we create the paths to the various data sources and load the necessary functions for extraction.\n\n```{r set_up}\n#| label: set_up\n\n# paths\npath_to_pre_survey <- file.path(#\"..\",\n                                \"data_processed\", \"pre_month_survey.dta\")\n\n# load wrapper functions\nsource(file.path(\"script_qmd\",\n                 \"functions.R\"))\n\n```\n\n## Load the data\n\nWe expect to already have the precipitation time series associated with the household of the survey. This data is stored as `dta` files, so we use the `haven::read_dta()` function to read it.\n\n```{r read_surveys}\n#| label: read_surveys\n\nsurvey <- haven::read_dta(path_to_pre_survey)\n\nsurvey\n```\n\n## Prepare the data\n```{r unique_values}\nn_hh <- nrow(survey)\nn_hh\n\nn_locations <- unique(survey$ID) |> \n  length()\nn_locations\n\nn_cells <- survey |>\n    dplyr::distinct(x_cell, y_cell) |>\n    nrow()\nn_cells\n```\n\nIn the survey there are `r n_hh` household, but some of them share the same location. Indeed the number of unique location is `r n_locations`. Further, some of these location have the same weather observations. The actual unique weather observations is `r n_cells`.\n\nComputing the SPI can be computationally intensive, especially if we need to do it for each households. However, we now that there actually only `r n_cells` distinct weather time series, so we compute the SPI only for these ones. We prepare the data with the `prepare_coord()` function.\n\n```{r prep_coord}\n#| label: prep_coord\n\ncoord <- prepare_coord(survey,\n                       lat_var = y_cell, \n                       lon_var = x_cell)\n```\n\n## Compute the SPI\nWe now compute the SPI with the function `compute_spi()`. This function requires the precipitation time series for each location and the time scale at which the SPI is computed.\n\nTo compute the SPI, it is recommended to use at least 30 years of observation to ensure a good estimation of the parameters. More years can strength the estimation but the results can be affected by climate change: if there have been a change in the climate parameters, old observations might be not indicative of the current situation affecting the estimation. There are no clear rule on this, so we leave add the possibility to select the time range of observation with the function `select_by_dates()`. The function requires both or just one between the starting date, `from`, and the end date `to`. If both are provide the the function select between the two dates, if only `from` is provided the function selects all date after, and if only `to` is provided the function selects all date before.\n\nLooking at the result, we see first is the `ID` column, that we will use to merge back with the survey. The other columns contain the SPI observations over time specific to each coordinate.\n\n```{r compute_spi}\n#| label: compute_spi\n#| warning: false\n\n# coord  <- select_by_dates(coord, from = \"1991-01-01\", to = \"2023-01-01\") \n\nspi3 <- compute_spi(coord, time_scale = 3)\nspi3\n```\n\n## Merge with survey\n\nNow, we combine the extracted weather data with the survey data using `ID` as the key matching variable.\n\nIf we want to select just a subsets of observations we can use the `select_by_dates()` function. If we want to select based on the date of interview of the survey, we can use `select_by_interview()`. This last function requires the variable that contains the dates of interview and the interval to select based on the dates. The interval must be express in number of months or in number years. The `wide` argument specifies how the output should be reported, in wide with each time observation as separate columns, or long, with all observation in one column.\n\n>Note that current version of the `select_by_interview()` functions drops the observations with missing date of interview.\n\n```{r merge_spi}\n#| label: merge_spi\nspi3_survey <- merge_with_survey(coord, spi3)\n\n# select_by_interview(spi3_survey,\n#                     interview = end_date_n,\n#                     interval = \"1 year\",\n#                     wide = TRUE)\n\nspi3_survey\n```\n\nWe are back at `r nrow(spi3_survey)`, which matches the original survey.\n\n## Save\n\nThe final step of the code is to save the result. In this case, we save it as a `dta` file using the `haven::write_dta()` function.\n\n```{r write_data}\n#| label: write_data\n\nhaven::write_dta(spi3_survey,\n                 file.path(\"..\", \"data_processed\", \"spi3_survey.dta\"))\n```\n\n# Take home messages\n\n1.  Load! `haven::read_dta()` for the dta files,\n\n2.  Prepare the data! Use the wrapper functions `prepare_coord()`.\n\n3.  Compute! Use the wrapper function `compute_spi()`.\n\n4.  Merge! Use the wrapper function `merge_with_survey()`.\n\n5.  Save! If in a dta file use `haven::write_dta()`.\n\n# Appendix\n## New to R? Read this first!\n### The pipe command\n\nThe pipe command `|>`. It lets you pass the result of one expression as the first argument to the next, creating a fluid chain of functions.\n\n### The package namespaces\n\nThe package namespaces `package_name::function_name()`. As the name suggests, namespaces provide \"spaces\" for \"names\". They provide a context for looking up the value of an object associated with a name. When we write `terra::vect()` we are asking R to look for the function `vect()` in the `terra` package.\n\nIt's a fairly advanced topic, and by-and-large, not that important! When you first start using namespaces, it'll seem like a lot of work for little gain. However, having a high quality namespace helps encapsulate your package and makes it self-contained. This ensures that other packages won't interfere with your code, that your code won't interfere with other packages, and that your package works regardless of the environment in which it's run.\n\nYou can avoid using every time the name space by just loading the necessary packages at the beginning of the code (in the set up section for example). This is the most known and common approach. To do so just add `library(name_of_package)`, for example `library(terra)`. Then we can just call the function without the name space, like this `vect()`.\n\n### The assign operator\n\nThe assign operator `<-`. This is a peculiarity of R and it is used to assign values to variables. Note that the operators `<-` and `=` can be used, almost interchangeably.\n\n## Want to know about the data?\n### Precipitation\nMonthly precipitation from Climate Hazards Group InfraRed Precipitation with Station data (CHIRPS)[^1] is a 35+ year quasi-global rainfall data set. Spanning 50°S-50°N (and all longitudes) and ranging from 1981 to near-present, CHIRPS incorporates in-house climatology, CHPclim, 0.05° resolution satellite imagery, and in-situ station data to create gridded rainfall time series for trend analysis and seasonal drought monitoring.\n\nData can be downloaded from [here](https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_monthly/netcdf/) while extra information are available [here](https://www.chc.ucsb.edu/).\n\n[^1]: Funk, C.C., Peterson, P.J., Landsfeld, M.F., Pedreros, D.H., Verdin, J.P., Rowland, J.D., Romero, B.E., Husak, G.J., Michaelsen, J.C., and Verdin, A.P., 2014, A quasi-global precipitation time series for drought monitoring: U.S. Geological Survey Data Series 832, 4 p. http://pubs.usgs.gov/ds/832/\n\n| feature             | value                 |\n|:--------------------|:----------------------|\n| spatial resolution  | 0.05 x 0.05 (\\~ 5 km) |\n| temporal resolution | monthly               |\n| temporal frame      | 1981 - near present   |\n| unit of measure     | mm/month              |\n\n### Survey\nSuriname Survey of Living Conditions. The 2022 Suriname Survey of Living Conditions is a joint survey made by The Inter-American Development Bank (IDB) and the World Bank. The 2022 Suriname Survey of Living Conditions - administered to a nationally representative sample, which included 7,713 individuals from 2,540 households - was developed to support poverty analysis as well as policy planning and is a helpful tool for policy makers to facilitate fact-based decision making. The survey’s design and execution were financed by the IDB, while the World Bank and IDB are joining forces to analyze data and produce initial findings. The Suriname Survey of Living Conditions (SSLC) 2016/17 is an effort of the Inter-American Development Bank (IDB) with the support of the EnergieBedrijvan Suriname’s (state-owned electrical company of Suriname) and the Central Bank of Suriname. It visited about 2,000 households from October 2016 through September 2017 and collected data on the most important dimensions of welfare, which will support evidence-based policy making in areas such as education, health, housing, employment and poverty alleviation. The survey also gathered information on the consumption patterns, income and expenditures of the Surinamese households, intended to update the Consumption Price Index basket and inform the System of National Accounts.\n\nFor extra info look [here](https://openknowledge.worldbank.org/entities/publication/2d0e6975-2f85-4d12-83fa-4f75c617cf89) and [here](https://webapps.ilo.org/surveyLib/index.php/catalog/7499).\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":2,"self-contained":true,"output-file":"sur_spi.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","author":"JMR","toc-expand":1,"logo":"../images/Climat4Economist_Symbol.png","editor":"source","editor_options":{"chunk_output_type":"console"},"vignette":"%\\VignetteIndexEntry{Vignette's Title} %\\VignetteEncoding{UTF-8} %\\VignetteEngine{quarto::html}\n","toc-location":"right-body","title":"Compute SPI"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html","docx"]}