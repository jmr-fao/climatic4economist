% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_geoBoundaries.R
\name{read_geoBoundaries}
\alias{read_geoBoundaries}
\title{Read Sub National Administrative Divisions from geoBoundaries Files}
\usage{
read_geoBoundaries(path_to_files, iso, lvl = 2, file_format = "geojson")
}
\arguments{
\item{iso}{A character vector with one or more ISO 3-letter country codes (e.g., \code{"KEN"}, \code{"UGA"}).}

\item{lvl}{An integer specifying the desired level of administrative division to return:
\code{1} for ADM1, or \code{2} for ADM2 (default).}

\item{path_to_data}{A character string specifying the path where the country folders
containing GeoJSON administrative division files are stored.}
}
\value{
A named list of \code{SpatVector} objects, each corresponding to one country.
- If \code{lvl = 1}, the function returns ADM1 polygons with columns: \code{adm_div_1}, \code{iso}, \code{lvl}.
- If \code{lvl = 2}, it returns intersected ADM2 polygons including the corresponding ADM1 divisions,
with columns: \code{iso}, \code{adm_div_1}, \code{adm_div_2}, \code{lvl}.
}
\description{
This function reads and processes administrative boundaries at at any given
level for one or more countries from a given directory path.
The function uses \code{terra} to load the vector files and \code{tidyterra} for cleaning
and renaming columns.
The data are obtained from \href{https://www.geoboundaries.org/countryDownloads.html}{geoBoundaries}.
}
\details{
The function expects a directory structure like:

\if{html}{\out{<div class="sourceCode">}}\preformatted{path_to_data/
├── KEN/
│   ├── .../KEN_ADM1.geojson
│   └── .../KEN_ADM2.geojson
├── UGA/
│   ├── .../UGA_ADM1.geojson
│   └── .../UGA_ADM2.geojson
}\if{html}{\out{</div>}}

It performs intersection between ADM2 and ADM1 shapes to ensure hierarchical alignment.
}
\examples{
\dontrun{
path <- "path/to/admin_data"
read_geoBoundaries(path_to_data = path, iso = c("KEN", "UGA"), lvl = 2)
}
}
